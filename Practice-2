// Import dependencies
const express = require("express");
const jwt = require("jsonwebtoken");
const bodyParser = require("body-parser");

const app = express();
app.use(bodyParser.json());

// Secret key for JWT signing
const SECRET_KEY = "mySecretKey123";

// Dummy user credentials (for simplicity)
const USER = {
  username: "admin",
  password: "password123"
};

// -------------------- LOGIN ROUTE --------------------
app.post("/login", (req, res) => {
  const { username, password } = req.body;

  // Validate hardcoded credentials
  if (username === USER.username && password === USER.password) {
    // Create a token
    const token = jwt.sign({ username }, SECRET_KEY, { expiresIn: "1h" });
    res.json({ message: "Login successful", token });
  } else {
    res.status(401).json({ message: "Invalid credentials" });
  }
});

// -------------------- JWT VERIFICATION MIDDLEWARE --------------------
function verifyToken(req, res, next) {
  const authHeader = req.headers["authorization"];

  // Check for Bearer token
  if (!authHeader) {
    return res.status(403).json({ message: "No token provided" });
  }

  const token = authHeader.split(" ")[1]; // Extract token part

  jwt.verify(token, SECRET_KEY, (err, decoded) => {
    if (err) {
      return res.status(401).json({ message: "Invalid or expired token" });
    }
    req.user = decoded; // Save decoded data
    next();
  });
}

// -------------------- PROTECTED ROUTE --------------------
app.get("/protected", verifyToken, (req, res) => {
  res.json({
    message: "Access granted to protected route!",
    user: req.user
  });
});

// -------------------- START SERVER --------------------
const PORT = 5000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
